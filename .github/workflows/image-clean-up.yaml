name: Cleanup Old Docker Images

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Clean up
        run: |
          PACKAGE_VERSIONS=$(curl --request GET \
          --url "https://api.github.com/orgs/AttoCash/packages/container/node/versions" \
          --header "Authorization: Bearer $TOKEN" \
          --header "Accept: application/vnd.github.v3+json")
          
          echo "PACKAGE_VERSIONS: $PACKAGE_VERSIONS"
          
          TWO_WEEKS_AGO=$(date -d "2 weeks ago" +%s)
          
          VERSION_IDS_TO_DELETE=()
          
          for VERSION in $(echo "$PACKAGE_VERSIONS" | jq -r '.[] | @base64'); do
            VERSION_JSON=$(echo "$VERSION" | base64 --decode)
            ID=$(echo "$VERSION_JSON" | jq -r '.id')
            CREATED_AT=$(echo "$VERSION_JSON" | jq -r '.created_at')
            TAGS=$(echo "$VERSION_JSON" | jq -r '.metadata.container.tags[]?')
          
            DELETE=true
            for TAG in $TAGS; do
              if [[ $TAG =~ ^[0-9]+\.[0-9]+-(dev|beta|live)$|^[0-9]+-(dev|beta|live)$|^(dev|beta|live|main)$ ]]; then
                DELETE=false
                break
              fi
            done
          
            CREATED_AT_IN_SECONDS=$(date --date="$CREATED_AT" +%s)
            if [[ $DELETE == true && $CREATED_AT_IN_SECONDS -lt $TWO_WEEKS_AGO ]]; then
              VERSION_IDS_TO_DELETE+=($ID)
            fi
          done
          
          for ID in "${VERSION_IDS_TO_DELETE[@]}"; do
            echo "Deleting version with ID: $ID"
            curl --request DELETE \
              --url "https://api.github.com/orgs/AttoCash/packages/container/node/versions/$ID" \
              --header "Authorization: Bearer $TOKEN" \
              --header "Accept: application/vnd.github.v3+json"
          done
        env:
          TOKEN: ${{ secrets.TOKEN }}